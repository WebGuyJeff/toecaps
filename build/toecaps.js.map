{"version":3,"file":"toecaps.js","mappings":"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","sources":["webpack://toecaps/./src/js/accordian.js","webpack://toecaps/./src/js/dropdown.js","webpack://toecaps/./src/js/menu-fullscreen.js","webpack://toecaps/./src/js/menu-more.js","webpack://toecaps/./src/js/parallax.js","webpack://toecaps/./src/js/psuedo-button.js","webpack://toecaps/./src/js/search-popup.js","webpack://toecaps/webpack/bootstrap","webpack://toecaps/webpack/runtime/define property getters","webpack://toecaps/webpack/runtime/hasOwnProperty shorthand","webpack://toecaps/./src/toecaps.js"],"sourcesContent":["/**\n * Toecaps Accordian Module.\n *\n * Toggles the ARIA attributes on accordian toggle buttons.\n *\n * @package Toecaps\n * @author Jefferson Real <me@jeffersonreal.uk>\n * @copyright Copyright (c) 2022, Jefferson Real\n */\n\nconst accordianButtons = [\n\t...document.querySelectorAll( 'button.accordian_title' ),\n]\n\nconst accordian = {\n\tbindEvents: () =>\n\t\taccordianButtons.forEach( ( element ) =>\n\t\t\telement.addEventListener( 'click', function () {\n\t\t\t\taccordian.toggleAria( this )\n\t\t\t} )\n\t\t),\n\n\ttoggleAria: ( accordian ) => {\n\t\taccordian.setAttribute(\n\t\t\t'aria-expanded',\n\t\t\taccordian.getAttribute( 'aria-expanded' ) === 'true'\n\t\t\t\t? 'false'\n\t\t\t\t: 'true'\n\t\t)\n\t\taccordian.setAttribute(\n\t\t\t'aria-pressed',\n\t\t\taccordian.getAttribute( 'aria-pressed' ) === 'true' ? 'false' : 'true'\n\t\t)\n\t\t// Toggle the checkbox toggle.\n\t\taccordian.nextElementSibling.click()\n\t},\n\n\tinitialise: () => {\n\t\tconst docLoaded = setInterval( function () {\n\t\t\tif ( document.readyState === 'complete' ) {\n\t\t\t\tclearInterval( docLoaded )\n\t\t\t\taccordian.bindEvents()\n\t\t\t}\n\t\t}, 100 )\n\t},\n}\n\nexport { accordian }\n","/**\n * Toecaps Dropdown Menu Handler.\n *\n * Handles all functionality associated with opening and closing dropdown components.\n *\n * @package Toecaps\n * @author Jefferson Real <me@jeffersonreal.uk>\n * @copyright Copyright (c) 2022, Jefferson Real\n */\n\n// Get the an array of unique menu elements which contain dropdowns.\nconst dropdowns = document.querySelectorAll( '.dropdown-hover' )\nconst dropdownParents = []\ndropdowns.forEach( ( dropdown ) => {\n\tdropdownParents.push( dropdown.parentElement )\n} )\nconst menuContainers = [ ...new Set( dropdownParents ) ]\n\n// True when mousedown on element, false after mouseup.\nlet mouseDown = false\n\nconst dropdownControl = {\n\t/**\n\t * Initialise the dropdowns.\n\t *\n\t * Fired on doc ready to attach event listeners to all dropdowns in the DOM.\n\t */\n\tinitDropdowns: function () {\n\t\t// Attach 'click' event handler to page.\n\t\tdocument.addEventListener( 'click', dropdownControl.pageClickHandler )\n\n\t\t// Attach 'mouseenter' and 'mouseleave' event handlers to dropdown(s).\n\t\tlet hoverDropdowns = document.querySelectorAll( '.dropdown-hover' );\n\t\t[ ...hoverDropdowns ].forEach( ( dropdown ) => {\n\t\t\tdropdownControl.registerHover( dropdown )\n\t\t} )\n\n\t\t// Attach 'click' event handler to the menu container(s).\n\t\tmenuContainers.forEach( ( menu ) => {\n\t\t\tmenu.addEventListener( 'click', dropdownControl.menuClickHandler )\n\t\t\tmenu.addEventListener( 'mousedown', () => {\n\t\t\t\tmouseDown = true\n\t\t\t} )\n\t\t\tmenu.addEventListener( 'mouseup', () => {\n\t\t\t\tmouseDown = false\n\t\t\t} )\n\t\t} )\n\t},\n\n\t/**\n\t * Call init function on document ready.\n\t *\n\t * Polls for document ready state.\n\t */\n\tinitialise: () => {\n\t\tlet docLoaded = setInterval( function () {\n\t\t\tif ( document.readyState === 'complete' ) {\n\t\t\t\tclearInterval( docLoaded )\n\t\t\t\tdropdownControl.initDropdowns()\n\t\t\t}\n\t\t}, 100 )\n\t},\n\n\t/**\n\t * Check if passed elem is in left half of viewport.\n\t *\n\t * @param {HTMLElement} element - Element to check.\n\t */\n\tisInLeftHalf: function ( element ) {\n\t\tconst dims = element.getBoundingClientRect()\n\t\tconst viewportWidth = window.innerWidth\n\n\t\treturn dims.left <= viewportWidth / 2\n\t},\n\n\t/**\n\t * Check if passed elem is overflowing viewport bottom and scroll window if needed.\n\t *\n\t * @param {HTMLElement} menu - The dropdown contents (menu) element.\n\t */\n\tscrollIntoView: function ( menu ) {\n\t\tconst menuStyles = menu.getBoundingClientRect()\n\t\tconst bodyStyles = document.body.getBoundingClientRect()\n\t\tconst viewportHeight = window.innerHeight\n\n\t\tif ( menuStyles.bottom > viewportHeight ) {\n\t\t\tconst scrollDistance = menuStyles.bottom - viewportHeight\n\t\t\twindow.scrollBy( 0, scrollDistance ) // x,y\n\n\t\t\tif ( menuStyles.bottom > bodyStyles.bottom ) {\n\t\t\t\tdocument.body.style.height =\n\t\t\t\t\tdocument.documentElement.scrollHeight +\n\t\t\t\t\tscrollDistance +\n\t\t\t\t\t'px'\n\t\t\t}\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t},\n\n\t/**\n\t * Page Click Handler.\n\t *\n\t * A callback to be passed with event listeners.\n\t *\n\t * @param {Event} event - The event object.\n\t */\n\tpageClickHandler: function ( event ) {\n\t\t// Bail if the click is on a menu.\n\t\tlet isAMenu = false\n\t\tmenuContainers.forEach( ( menu ) => {\n\t\t\tif ( !!menu.contains( event.target ) === true ) {\n\t\t\t\tisAMenu = true\n\t\t\t}\n\t\t} )\n\t\tif ( isAMenu ) return\n\n\t\t// Get all active top-level dropdowns.\n\t\tconst activeDropdowns = []\n\t\tdocument.querySelectorAll( '.dropdown-hover' ).forEach( ( dropdown ) => {\n\t\t\tif (\n\t\t\t\tdropdown.contains(\n\t\t\t\t\tdropdown.querySelector( '.dropdown_toggle-active' )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tactiveDropdowns.push( dropdown )\n\t\t\t}\n\t\t} );\n\n\t\t// Close all active top-level dropdowns.\n\t\t[ ...activeDropdowns ].forEach( ( dropdown ) => {\n\t\t\tif ( !!dropdown.closest( '[data-hover-lock=\"true\"]' ) === true ) {\n\t\t\t\tdropdown\n\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t.setAttribute( 'data-hover-lock', 'false' )\n\t\t\t}\n\t\t\tdropdownControl.close( dropdown.querySelector( '.dropdown_toggle' ) )\n\t\t} )\n\t},\n\n\t/**\n\t * Hover Event Handler.\n\t *\n\t * A callback to be passed with event listeners.\n\t *\n\t * @param {Event} event - The event object.\n\t */\n\thoverHandler: function ( event ) {\n\t\tconst button = event.target\n\t\t\t.closest( '.dropdown-hover' )\n\t\t\t.getElementsByClassName( 'dropdown_toggle' )[ 0 ]\n\n\t\tif ( event.type === 'mouseenter' ) {\n\t\t\t// Open it.\n\t\t\tdropdownControl.open( button )\n\t\t} else if ( event.type === 'mouseleave' ) {\n\t\t\t// In case a mousedown event is dragged off the element, this resets the var to false.\n\t\t\tmouseDown = false\n\n\t\t\t// If this menu branch isn't hover-locked.\n\t\t\tif (\n\t\t\t\t!!button.closest( '[data-hover-lock=\"true\"]' ) === false &&\n\t\t\t\tbutton.classList.contains( 'dropdown_toggle-active' )\n\t\t\t) {\n\t\t\t\t/**\n\t\t\t\t * Chrome Bug Patch:\n\t\t\t\t *\n\t\t\t\t * When the dropdown menu class is updated on click -> open(), the dropdown\n\t\t\t\t * appears to be removed from the viewport for a split second causing a\n\t\t\t\t * mouseleave event to fire. This means, when you click on a sub-dropdown menu\n\t\t\t\t * after hovering over the parent, it closes the menu.\n\t\t\t\t *\n\t\t\t\t * More weirdly, this only happens if the browser itself doesn't have OS window\n\t\t\t\t * focus before performing the hover > click. If you click anywhere on the\n\t\t\t\t * browser UI, including on the viewport area, this bug will not occur. Super\n\t\t\t\t * edge-case bug!\n\t\t\t\t *\n\t\t\t\t * Tested in KDE Debian, and only occurs in Chrome. Firefox/Opera tested OK.\n\t\t\t\t *\n\t\t\t\t * To patch this issue, a timeout delay is added to the mouseleave event, so\n\t\t\t\t * that before the close() is fired, a sanity check can be performed to ensure\n\t\t\t\t * the mouse is still not over the dropdown. If the mouse is still hovering the\n\t\t\t\t * dropdown, the close() is not fired and this bug is avoided.\n\t\t\t\t */\n\t\t\t\tlet hoverTarget\n\t\t\t\tconst mouseOverElem = ( event ) => {\n\t\t\t\t\thoverTarget = event.target\n\t\t\t\t}\n\t\t\t\tdocument.addEventListener( 'mouseover', mouseOverElem, false )\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tif ( !button.parentElement.contains( hoverTarget ) ) {\n\t\t\t\t\t\tdropdownControl.close( button )\n\t\t\t\t\t}\n\t\t\t\t\tdocument.removeEventListener(\n\t\t\t\t\t\t'mouseover',\n\t\t\t\t\t\tmouseOverElem,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t)\n\t\t\t\t}, 10 )\n\t\t\t\t// Bug Patch End.\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Focus Event Handler.\n\t *\n\t * A callback to be passed with event listeners.\n\t *\n\t * @param {Event} event - The event object.\n\t */\n\tfocusHandler: function ( event ) {\n\t\t// Bail if a click is being triggered to avoid duplicate calls to open().\n\t\tif ( mouseDown ) return\n\n\t\tconst button = event.target\n\t\t\t.closest( '.dropdown' )\n\t\t\t.getElementsByClassName( 'dropdown_toggle' )[ 0 ]\n\n\t\tif ( event.type === 'focusin' ) {\n\t\t\t// Open it.\n\t\t\tdropdownControl.open( button )\n\t\t} else if ( event.type === 'focusout' ) {\n\t\t\t// If this menu branch isn't hover-locked.\n\t\t\tif (\n\t\t\t\t!!button.closest( '[data-hover-lock=\"true\"]' ) === false &&\n\t\t\t\tbutton.classList.contains( 'dropdown_toggle-active' )\n\t\t\t) {\n\t\t\t\t// If focus has moved outside the dropdown branch, close the whole thing.\n\t\t\t\tif (\n\t\t\t\t\t!!event.target\n\t\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t\t.contains( event.relatedTarget ) ===\n\t\t\t\t\tfalse\n\t\t\t\t) {\n\t\t\t\t\t// Close dropdown branch.\n\t\t\t\t\tdropdownControl.close(\n\t\t\t\t\t\tevent.target\n\t\t\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t\t\t.querySelector( '.dropdown_toggle' )\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\t// Close dropdown.\n\t\t\t\t\tdropdownControl.close( button )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Register hover and focus event listeners.\n\t *\n\t * Attach hover and focus listeners to a dropdown element. This can be used to register new\n\t * dropdowns by external scripts. In the Toecaps theme, this function is used by\n\t * menu-more.js to register the auto-generated 'more' dropdown.\n\t *\n\t * @param {HTMLElement} dropdown - The dropdown element to attach event listeners to.\n\t */\n\tregisterHover: function ( dropdown ) {\n\t\t// Only attach hover listeners to non-mobile menu.\n\t\tif ( !!dropdown.closest( '.fullscreenMenu' ) === false ) {\n\t\t\tdropdown.addEventListener(\n\t\t\t\t'mouseenter',\n\t\t\t\tdropdownControl.hoverHandler\n\t\t\t)\n\t\t\tdropdown.addEventListener(\n\t\t\t\t'mouseleave',\n\t\t\t\tdropdownControl.hoverHandler\n\t\t\t)\n\t\t\tdropdown.setAttribute( 'data-hover-listener', 'true' )\n\t\t}\n\t\t// Attach focus listeners to all menus.\n\t\tdropdown.addEventListener( 'focusin', dropdownControl.focusHandler )\n\t\tdropdown.addEventListener( 'focusout', dropdownControl.focusHandler )\n\t},\n\n\t/**\n\t * Deregister hover event listeners.\n\t *\n\t * Useful for when the hover functionality is no longer desireable. This is also used by\n\t * more.js to disable hover functionality when items are moved into the 'more' dropdown.\n\t *\n\t * @param {HTMLElement} dropdown The dropdown element to deregister hover listeners from.\n\t */\n\tderegisterHover: function ( dropdown ) {\n\t\tdropdown.removeEventListener(\n\t\t\t'mouseenter',\n\t\t\tdropdownControl.hoverHandler\n\t\t)\n\t\tdropdown.removeEventListener(\n\t\t\t'mouseleave',\n\t\t\tdropdownControl.hoverHandler\n\t\t)\n\t\tdropdown.setAttribute( 'data-hover-listener', 'false' )\n\t},\n\n\t/**\n\t * Menu Click Event Handler.\n\t *\n\t * Menu branches are locked open as soon as they are clicked anywhere inside. This means\n\t * they won't close when the user accidentally hovers-off the menu, but they will close as\n\t * soon as a click is detected outside of the menu branch.\n\t *\n\t * @param {Event} event The click event.\n\t */\n\tmenuClickHandler: function ( event ) {\n\t\t// If click is on a dropdown toggle button or dropdown primary element.\n\t\tif (\n\t\t\t!!event.target.closest( '.dropdown_toggle' ) === true ||\n\t\t\t!!event.target.closest( '.dropdown_primary' ) === true\n\t\t) {\n\t\t\t// Find the toggle button inside the parent dropdown element.\n\t\t\tconst button = event.target\n\t\t\t\t.closest( '.dropdown' )\n\t\t\t\t.querySelector( '.dropdown_toggle' )\n\n\t\t\t// If active and unlocked.\n\t\t\tif (\n\t\t\t\tbutton.classList.contains( 'dropdown_toggle-active' ) &&\n\t\t\t\t!!button.closest( '[data-hover-lock=\"true\"]' ) === false\n\t\t\t) {\n\t\t\t\t// Lock it.\n\t\t\t\tbutton\n\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t.setAttribute( 'data-hover-lock', 'true' )\n\n\t\t\t\t// If active and locked.\n\t\t\t} else if (\n\t\t\t\tbutton.classList.contains( 'dropdown_toggle-active' ) &&\n\t\t\t\t!!button.closest( '[data-hover-lock=\"true\"]' ) === true\n\t\t\t) {\n\t\t\t\t// If it's the top level dropdown, unlock it.\n\t\t\t\tif ( button.parentElement.classList.contains( 'dropdown-hover' ) ) {\n\t\t\t\t\tbutton\n\t\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t\t.setAttribute( 'data-hover-lock', 'false' )\n\t\t\t\t}\n\t\t\t\t// Close it.\n\t\t\t\tdropdownControl.close( button )\n\n\t\t\t\t// Else, is not active.\n\t\t\t} else {\n\t\t\t\t// Lock it.\n\t\t\t\tbutton\n\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t.setAttribute( 'data-hover-lock', 'true' )\n\n\t\t\t\t// Open it.\n\t\t\t\tdropdownControl.open( button )\n\t\t\t}\n\n\t\t\t// Click is NOT on a dropdown button, but IS in an UNLOCKED dropdown branch.\n\t\t} else if (\n\t\t\t!!event.target.closest( '[data-hover-lock=\"true\"]' ) === false &&\n\t\t\t!!event.target.closest( '.dropdown-hover' ) === true\n\t\t) {\n\t\t\t// Lock this menu branch.\n\t\t\tevent.target\n\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t.setAttribute( 'data-hover-lock', 'true' )\n\t\t}\n\t},\n\n\t/**\n\t * Open the menu.\n\t *\n\t * Takes a dropdown button element and opens the menu branch. It should not need to be aware\n\t * of the caller or trigger, only requiring the passing of the button toggle element.\n\t *\n\t * It performs these tasks:\n\t *  - Closes other open branches in the same dropdown.\n\t *  - Close other top level dropdowns no longer in focus.\n\t *  - Open inactive ancestor dropdowns when a child is focused directly by reverse tabbing.\n\t *\n\t * @param {HTMLElement} button The dropdown button toggle element.\n\t */\n\topen: function ( button ) {\n\t\tconst dropdown = button.parentElement\n\n\t\t// Set dropdown swing direction on smaller screens.\n\t\tif ( dropdown.classList.contains( 'dropdown-hover' ) ) {\n\t\t\tif ( dropdownControl.isInLeftHalf( dropdown ) ) {\n\t\t\t\tdropdown.classList.add( 'dropdown-swingRight' )\n\t\t\t\tdropdown.classList.remove( 'dropdown-swingLeft' )\n\t\t\t} else {\n\t\t\t\tdropdown.classList.add( 'dropdown-swingLeft' )\n\t\t\t\tdropdown.classList.remove( 'dropdown-swingRight' )\n\t\t\t}\n\t\t}\n\n\t\t// Close other open branches in the ancestor dropdown.\n\t\tconst activeButtons = document.querySelectorAll(\n\t\t\t'.dropdown_toggle-active'\n\t\t);\n\t\t[ ...activeButtons ].forEach( ( activeButton ) => {\n\t\t\t// Check this isn't an ancestor of the newly opened dropdown.\n\t\t\tif ( !activeButton.parentElement.contains( button ) ) {\n\t\t\t\t// Close.\n\t\t\t\tdropdownControl.close( activeButton )\n\t\t\t}\n\t\t} )\n\n\t\t// Get and close all top-level dropdowns that do not contain this dropdown.\n\t\tconst activeTopLevelDropdowns = []\n\t\tconst allTopLevelDropdowns = document.querySelectorAll(\n\t\t\t'.dropdown-hover:not( .fullscreenMenu .dropdown )'\n\t\t);\n\t\t[ ...allTopLevelDropdowns ].forEach( ( topLevelDropdown ) => {\n\t\t\tif (\n\t\t\t\ttopLevelDropdown.contains(\n\t\t\t\t\ttopLevelDropdown.querySelector( '.dropdown_toggle-active' )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tactiveTopLevelDropdowns.push( topLevelDropdown )\n\t\t\t}\n\t\t} );\n\t\t[ ...activeTopLevelDropdowns ].forEach( ( activeDropdown ) => {\n\t\t\t// If dropdown isn't the target, but is active, close it.\n\t\t\tif ( !activeDropdown.contains( dropdown ) ) {\n\t\t\t\t// Remove lock and close.\n\t\t\t\tactiveDropdown.setAttribute( 'data-hover-lock', 'false' )\n\t\t\t\tdropdownControl.close(\n\t\t\t\t\tactiveDropdown.querySelector( '.dropdown_toggle' )\n\t\t\t\t)\n\t\t\t}\n\t\t} )\n\n\t\t// Open the ancestors when reverse-tabbing focuses on a last-child dropdown item first.\n\t\tif (\n\t\t\t!!button.parentElement.classList.contains( 'dropdown-hover' ) ===\n\t\t\t\tfalse &&\n\t\t\t!!button.classList.contains( 'dropdown_toggle-active' ) === false\n\t\t) {\n\t\t\t// This is a child dropdown with no active ancestor.\n\n\t\t\tconst inactiveAncestorDropdowns = []\n\t\t\tconst allBranchDropowns = [\n\t\t\t\t...dropdown\n\t\t\t\t\t.closest( '.dropdown-hover' )\n\t\t\t\t\t.querySelectorAll( '.dropdown' ),\n\t\t\t]\n\t\t\t// Push the top level dropdown to beginning of array.\n\t\t\tallBranchDropowns.unshift( dropdown.closest( '.dropdown-hover' ) )\n\t\t\t// Remove the target dropdown as this will be handled by outer scope.\n\t\t\tallBranchDropowns.pop()\n\n\t\t\tallBranchDropowns.forEach( ( branchDropdown ) => {\n\t\t\t\tif ( branchDropdown.contains( dropdown ) ) {\n\t\t\t\t\tinactiveAncestorDropdowns.push( branchDropdown )\n\t\t\t\t\t// Set attributes.\n\t\t\t\t\tconst inactiveButton =\n\t\t\t\t\t\tbranchDropdown.querySelector( '.dropdown_toggle' )\n\t\t\t\t\tinactiveButton.classList.add( 'dropdown_toggle-active' )\n\t\t\t\t\tinactiveButton.setAttribute( 'aria-expanded', true )\n\t\t\t\t\tinactiveButton.setAttribute( 'aria-pressed', true )\n\t\t\t\t}\n\t\t\t} )\n\t\t}\n\n\t\t// Set attributes.\n\t\tbutton.classList.add( 'dropdown_toggle-active' )\n\t\tbutton.setAttribute( 'aria-expanded', true )\n\t\tbutton.setAttribute( 'aria-pressed', true )\n\n\t\t// Now browser has calculcated layout, adjust y-scroll if required,\n\t\tlet menu = dropdown.lastElementChild\n\t\tdropdownControl.scrollIntoView( menu )\n\t},\n\n\t/**\n\t * Close the menu.\n\t *\n\t * Takes a dropdown button element and closes the menu branch. It should not need to be\n\t * aware of the caller or trigger, only requiring the passing of the button toggle element.\n\t *\n\t * @param {HTMLElement} button The dropdown button toggle element.\n\t */\n\tclose: function ( button ) {\n\t\t// If the button's dropdown also has active children.\n\t\tlet activeBranch = button.parentElement.querySelectorAll(\n\t\t\t'.dropdown_toggle-active'\n\t\t)\n\t\tif ( activeBranch.length > 1 ) {\n\t\t\t// Iterate through innermost to outer closing all open in branch.\n\t\t\tfor ( let i = activeBranch.length - 1; i >= 0; i-- ) {\n\t\t\t\tactiveBranch[ i ].classList.remove( 'dropdown_toggle-active' )\n\t\t\t\tactiveBranch[ i ].setAttribute( 'aria-expanded', false )\n\t\t\t\tactiveBranch[ i ].setAttribute( 'aria-pressed', false )\n\t\t\t}\n\t\t} else {\n\t\t\tbutton.classList.remove( 'dropdown_toggle-active' )\n\t\t\tbutton.setAttribute( 'aria-expanded', false )\n\t\t\tbutton.setAttribute( 'aria-pressed', false )\n\t\t}\n\t},\n}\n\nexport { dropdownControl }\n","/**\n * Toecaps Fullscreen Menu Handler.\n *\n * Functions to handle UX menu features such as disabling body scroll while the fullscreen menu is\n * open. The fullscreen menu is enabled for smaller screens.\n *\n * @package Toecaps\n * @author Jefferson Real <me@jeffersonreal.uk>\n * @copyright Copyright (c) 2022, Jefferson Real\n */\n\nconst menuFullscreen = () => {\n\t/**\n\t * Grab the menu checkbox (should only ever be one instance).\n\t */\n\tconst checkbox = document.querySelector( '#fullscreenMenu_toggle' )\n\n\t/**\n\t * Initialise the menu.\n\t *\n\t * Attach a checkbox 'change' event listener to toggle scroll lock.\n\t * Attach a button event listener to toggle the menu.\n\t */\n\tfunction initialise() {\n\t\tcheckbox.addEventListener( 'change', function () {\n\t\t\tif ( this.checked ) {\n\t\t\t\tdisableScroll()\n\t\t\t} else {\n\t\t\t\tenableScroll()\n\t\t\t}\n\t\t} )\n\n\t\tconst buttons = [\n\t\t\tdocument.querySelector( '.fullscreenMenu_open' ),\n\t\t\tdocument.querySelector( '.fullscreenMenu_close' ),\n\t\t]\n\n\t\tbuttons.forEach( ( button ) => {\n\t\t\tbutton.addEventListener( 'click', () => {\n\t\t\t\tdocument.getElementById( 'fullscreenMenu_toggle' ).click()\n\t\t\t} )\n\t\t} )\n\t}\n\n\t/**\n\t * Windows resize event listener.\n\t *\n\t * Toggle the menu checkbox and re-enable body scroll in case the viewport is rezised beyond\n\t * 768px while the menu is open. Otherwise, the fullscreen menu would revert to desktop mode but\n\t * the scroll would remain disabled. Also, once the viewport was resized to less than 768px\n\t * again, the fullscreen menu would unexpectedly appear without the user clicking the menu\n\t * button again.\n\t */\n\tconst viewportSizeCheck = () => {\n\t\tlet viewportResizeSettle = window.setTimeout( () => {\n\t\t\tlet pageWidth = parseInt(\n\t\t\t\tdocument.querySelector( 'html' ).getBoundingClientRect().width,\n\t\t\t\t10\n\t\t\t)\n\t\t\tif ( pageWidth >= 768 && checkbox.checked ) {\n\t\t\t\twindow.clearTimeout( viewportResizeSettle )\n\t\t\t\tcheckbox.click()\n\t\t\t\treturn\n\t\t\t}\n\t\t}, 250 ) // Poll interval.\n\t}\n\n\t/**\n\t * Get the scrollbar width.\n\t *\n\t * Works by getting the difference between the viewport width and the html element width.\n\t *\n\t * @returns {string} scrollbarWidth The pixel width of the scrollbar.\n\t */\n\tconst getScrollbarWidth = () => {\n\t\t// Get window width inc scrollbar\n\t\tconst widthWithScrollBar = window.innerWidth\n\n\t\t// Get window width exc scrollbar\n\t\tconst widthWithoutScrollBar = document\n\t\t\t.querySelector( 'html' )\n\t\t\t.getBoundingClientRect().width\n\n\t\t// Calc the scrollbar width\n\t\tconst scrollbarWidth =\n\t\t\tparseInt( widthWithScrollBar - widthWithoutScrollBar, 10 ) + 'px'\n\t\treturn scrollbarWidth\n\t}\n\n\t/**\n\t * Disable scroll.\n\t *\n\t * Sets 'overflow: hidden' on the body element and inserts a div element to fill the gap left\n\t * by the missing scrollbar.\n\t *\n\t * Also attaches an event listner which fires viewportSizeCheck() to update the UI on resize.\n\t */\n\tfunction disableScroll() {\n\t\t// Cover the missing scrollbar gap with a black div\n\t\tlet elemExists = document.getElementById( 'js_psuedoScrollBar' )\n\n\t\tif ( elemExists !== null ) {\n\t\t\tdocument.getElementById( 'js_psuedoScrollBar' ).style.display =\n\t\t\t\t'block'\n\t\t} else {\n\t\t\tlet psuedoScrollBar = document.createElement( 'div' )\n\t\t\tpsuedoScrollBar.setAttribute( 'id', 'js_psuedoScrollBar' )\n\t\t\tpsuedoScrollBar.style.position = 'fixed'\n\t\t\tpsuedoScrollBar.style.right = '0'\n\t\t\tpsuedoScrollBar.style.top = '0'\n\t\t\tpsuedoScrollBar.style.width = getScrollbarWidth()\n\t\t\tpsuedoScrollBar.style.height = '100vh'\n\t\t\tpsuedoScrollBar.style.background = '#333'\n\t\t\tpsuedoScrollBar.style.zIndex = '9'\n\t\t\tdocument.body.appendChild( psuedoScrollBar )\n\t\t}\n\n\t\tdocument.querySelector( 'body' ).style.overflow = 'hidden'\n\t\tconst scrollbarWidth = getScrollbarWidth()\n\t\tdocument.querySelector( 'html' ).style.paddingRight = scrollbarWidth\n\n\t\twindow.addEventListener( 'resize', viewportSizeCheck )\n\t}\n\n\t/**\n\t * Enable scroll.\n\t *\n\t * Sets 'overflow: auto' on the body element and removes the div element used to cover the\n\t * missing scrollbar.\n\t */\n\tfunction enableScroll() {\n\t\tlet elemExists = document.getElementById( 'js_psuedoScrollBar' )\n\n\t\tif ( elemExists !== null ) {\n\t\t\tdocument.getElementById( 'js_psuedoScrollBar' ).style.display =\n\t\t\t\t'none'\n\t\t\tdocument.querySelector( 'body' ).style.overflow = 'auto'\n\t\t\tdocument.querySelector( 'html' ).style.paddingRight = '0'\n\t\t}\n\n\t\twindow.removeEventListener( 'resize', viewportSizeCheck )\n\t}\n\n\t// Poll for doc ready state\n\tlet docLoaded = setInterval( function () {\n\t\tif ( document.readyState === 'complete' ) {\n\t\t\tclearInterval( docLoaded )\n\t\t\tinitialise()\n\t\t}\n\t}, 100 )\n}\n\nexport { menuFullscreen }\n","/**\n * Automatic 'More' for Nav Bars.\n *\n * This plugin detects when a menu bar is outgrowing it's parent element, and moves as many\n * menu items as neccessary into an appended dropdown to make it fit.\n */\n\nimport { dropdownControl } from './dropdown.js'\n\nconst menuMore = () => {\n\t'use strict'\n\n\t// Settings.\n\tconst navSelector    = '.navBar nav'\n\tconst moreTemplate   = document.querySelector( \".autoMoreTemplate\" )\n\tconst minActiveWidth = 768 // Min CSS media query width navbar is shown.\n\tconst inNavbarClass  = 'dropdown-hover'\n\tconst inMoreClass    = 'dropdown-inMenu'\n\n\tlet initialised = false \n\tlet navParents  = []\n\tconst navBars   = document.querySelectorAll( navSelector )\n\n\tif ( navBars.length === 0 ) return\n\tnavBars.forEach( ( nav ) => {\n\t\tnavParents.push( nav.parentElement )\n\t} )\n\n\t/**\n\t * Swap in-nav/in-dropdown classes.\n\t */\n\tconst updateClasses = ( elem ) => {\n\t\tif ( elem.classList.contains( inMoreClass ) ) {\n\t\t\telem.classList.replace( inMoreClass, inNavbarClass )\n\t\t} else if ( elem.classList.contains( inNavbarClass ) ) {\n\t\t\telem.classList.replace( inNavbarClass, inMoreClass )\n\t\t}\n\t}\n\n\t/**\n\t * Get element inner width (without padding or borders).\n\t */\n\tconst getInnerWidth = ( element ) => {\n\t\tconst widthIncPadding = element.clientWidth\n\t\tconst styles          = window.getComputedStyle( element )\n\t\tconst paddingLeft     = parseInt( styles.getPropertyValue( 'padding-left' ), 10 )\n\t\tconst paddingRight    = parseInt( styles.getPropertyValue( 'padding-right' ), 10 )\n\t\tconst innerWidth      = widthIncPadding - ( paddingLeft + paddingRight )\n\t\treturn innerWidth\n\t} \n\n\t/**\n\t * Update all Nav Bars.\n\t */\n\tconst updateAll = () => {\n\t\tnavParents.forEach( ( navParent ) => {\n\t\t\tconst nav          = navParent.querySelector( navSelector )\n\t\t\tconst more         = nav.querySelector( '.autoMore' )\n\t\t\tconst moreContents = more.querySelector( '.autoMore > .dropdown_contents' )\n\t\t\tupdate( navParent, nav, more, moreContents )\n\t\t} )\n\t}\n\n\t/**\n\t * Update the 'more' element.\n\t */\n\tconst update = ( navParent, nav, more, moreContents ) => {\n\t\tlet navParentWidth = getInnerWidth( navParent )\n\t\tlet navWidth       = nav.offsetWidth\n\t\tconst flexGap      = parseInt( window.getComputedStyle( nav ).getPropertyValue( 'gap' ), 10 )\n\n\t\tif ( navWidth <= 0 ) return\n\t\tif ( window.innerWidth < minActiveWidth ) return\n\n\t\tif ( navWidth > navParentWidth ) {\n\t\t\t// Nav width is too big so we move items to 'more' dropdown.\n\t\t\twhile ( navWidth > navParentWidth ) {\n\t\t\t\tlet navLastItem = nav.querySelector( '.autoMore' ).previousElementSibling\n\t\t\t\tmoreContents.prepend( navLastItem )\n\t\t\t\tnavWidth = nav.offsetWidth\n\t\t\t\tupdateClasses( navLastItem )\n\t\t\t\tif ( navLastItem.classList.contains( inMoreClass ) ) {\n\t\t\t\t\tdropdownControl.deregisterHover( navLastItem )\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else if ( moreContents.children.length > 0 ) {\n\t\t\t// Nav width is smaller than parent and 'more' has children.\n\t\t\twhile ( moreContents.children.length > 0 ) {\n\t\t\t\tlet firstChild      = moreContents.firstElementChild\n\t\t\t\tlet firstChildWidth = firstChild.offsetWidth\n\t\t\t\tlet newNavWidth     = navWidth + firstChildWidth + flexGap\n\t\t\t\tif ( newNavWidth < navParentWidth ) {\n\t\t\t\t\tnav.insertBefore( firstChild, more )\n\t\t\t\t\tupdateClasses( firstChild )\n\t\t\t\t\tif ( firstChild.classList.contains( inNavbarClass ) ) {\n\t\t\t\t\t\tdropdownControl.registerHover( firstChild )\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( moreContents.children.length === 0 ) break\n\n\t\t\t\t\tfirstChild = moreContents.firstElementChild\n\t\t\t\t\tfirstChildWidth = firstChild.offsetWidth\n\t\t\t\t\tnavWidth = nav.offsetWidth\n\t\t\t\t\tnewNavWidth = navWidth + firstChildWidth + flexGap\n\t\t\t\t} else {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( moreContents.childElementCount > 0 ) {\n\t\t\tmore.style.position = 'relative'\n\t\t\tmore.style.visibility = 'visible'\n\t\t} else {\n\t\t\tmore.style.position = 'absolute'\n\t\t\tmore.style.visibility = 'hidden'\n\t\t}\n\t}\n\n\tconst init = () => {\n\t\tif ( initialised ) return\n\t\tinitialised = true\n\n\t\t// Add the 'more' element to all the navs.\n\t\tnavParents.forEach( ( navParent ) => {\n\t\t\tconst moreClone = moreTemplate.content.cloneNode( true )\n\t\t\tconst nav       = navParent.querySelector( navSelector )\n\n\t\t\tnav.appendChild( moreClone )\n\t\t\tconst autoMore = nav.querySelector( '.autoMore' )\n\n\t\t\t// Attach dropdown hover event listeners.\n\t\t\tdropdownControl.registerHover( autoMore )\n\n\t\t\t// Attach keydown listener to psuedo-button for spacebar/enter key accessibility.\n\t\t\tautoMore.firstElementChild.addEventListener( 'keydown', ( event ) => {\n\t\t\t\tif ( event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar' ) {\n\t\t\t\t\tevent.target.click()\n\t\t\t\t\t// Prevent browser scroll on space down (default behaviour in Chrome/Firefox etc).\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\n\t\t// Process the nav items.\n\t\tupdateAll()\n\t}\n\n\t/**\n\t * Throttled window resize trigger.\n\t */\n\tlet resizeTimout\n\twindow.onresize = () => {\n\t\tclearTimeout( resizeTimout )\n\t\tif ( !initialised ) return\n\t\tresizeTimout = setTimeout( updateAll, 30 )\n\t}\n\n\t/**\n\t * Initialise after page load.\n\t */\n\tlet docLoaded = setInterval( () => {\n\t\tif ( document.readyState === 'complete' ) {\n\t\t\tclearInterval( docLoaded )\n\t\t\tinit()\n\t\t}\n\t}, 10 )\n}\n\nexport { menuMore }\n","/**\n * Toecaps Parallax Module.\n *\n * Handle parallax animation using the GSAP library.\n *\n * @package Toecaps\n * @author Jefferson Real <me@jeffersonreal.uk>\n * @copyright Copyright (c) 2022, Jefferson Real\n */\n\ngsap.registerPlugin( ScrollTrigger )\n\nconst parallax = () => {\n\tconst doParallax = () => {\n\t\tconst paraElems = document.querySelectorAll( '.parallax' );\n\t\t[ ...paraElems ].forEach( ( parallax ) => {\n\t\t\tconst parallaxInner = parallax.querySelector( '.parallax_inner' )\n\t\t\tconst parallaxTrigger = parallax.closest( '.parallax_trigger' )\n\t\t\tconst height = parallaxInner.clientHeight\n\n\t\t\tgsap.to( parallaxInner, {\n\t\t\t\ty: height / 2,\n\t\t\t\tz: 0.01,\n\t\t\t\tease: 'none',\n\t\t\t\tscrollTrigger: {\n\t\t\t\t\ttrigger: parallaxTrigger,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tstart: 'top top', // top of elem meets top of screen\n\t\t\t\t\tend: 'bottom top', // end after scrolling (N)px beyond start.\n\t\t\t\t},\n\t\t\t} )\n\t\t} )\n\t}\n\n\t// Poll for doc ready state\n\tlet docLoaded = setInterval( function () {\n\t\tif ( document.readyState === 'complete' ) {\n\t\t\tclearInterval( docLoaded )\n\t\t\tdoParallax()\n\t\t}\n\t}, 100 )\n}\n\nexport { parallax }\n","/**\n * Toecaps Psuedo-button Initialiser.\n *\n * Find all psuedo-buttons (non-button element) and make them accessible.\n *\n * @package Toecaps\n * @author Jefferson Real <me@jeffersonreal.uk>\n * @copyright Copyright (c) 2022, Jefferson Real\n */\n\nconst psuedoButtons = () => {\n\t'use strict'\n\n\t/**\n\t * Initialise the buttons.\n\t *\n\t * Fired on doc ready to attach event listeners to all psuedo-buttons in the DOM.\n\t */\n\tfunction initPsuedoButtons() {\n\t\t// Get buttons which are not button elements.\n\t\tlet buttons = document.querySelectorAll( '.button:not( button )' );\n\n\t\t[ ...buttons ].forEach( ( button ) => {\n\t\t\t// Tell assistive tech this is a button.\n\t\t\tbutton.setAttribute( 'role', 'button' )\n\n\t\t\t// Add to the tab index.\n\t\t\tbutton.setAttribute( 'tabindex', '0' )\n\n\t\t\t// Attach keydown listener for spacebar/enter key accessibility.\n\t\t\tbutton.addEventListener( 'keydown', ( event ) => {\n\t\t\t\tif (\n\t\t\t\t\tevent.key === ' ' ||\n\t\t\t\t\tevent.key === 'Enter' ||\n\t\t\t\t\tevent.key === 'Spacebar'\n\t\t\t\t) {\n\t\t\t\t\tevent.target.click()\n\t\t\t\t\t// Prevent browser scroll on space down (default behaviour in Chrome/Firefox etc).\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\t}\n\n\t/**\n\t * Call init function on document ready.\n\t *\n\t * Polls for document ready state.\n\t */\n\tlet docLoaded = setInterval( function () {\n\t\tif ( document.readyState === 'complete' ) {\n\t\t\tclearInterval( docLoaded )\n\t\t\tinitPsuedoButtons()\n\t\t}\n\t}, 100 )\n}\n\nexport { psuedoButtons }\n","/**\n * Toecaps Search Popup.\n *\n * This attaches an event litener to the search button which toggles the search popup.\n *\n * @package Toecaps\n * @author Jefferson Real <me@jeffersonreal.uk>\n * @copyright Copyright (c) 2022, Jefferson Real\n */\n\nconst searchPopup = () => {\n\t/**\n\t * Grab the button which opens the search form (should only ever be one instance).\n\t */\n\tconst button = document.querySelector( '.search_button' )\n\n\t/**\n\t * Initialise the button.\n\t *\n\t * Attach a click event listener to the button which toggles the search form.\n\t */\n\tfunction initialise() {\n\t\tbutton.addEventListener( 'click', () => {\n\t\t\tdocument.querySelector( '.search_toggle' ).click()\n\t\t} )\n\t}\n\n\t// Poll for doc ready state\n\tlet docLoaded = setInterval( function () {\n\t\tif ( document.readyState === 'complete' ) {\n\t\t\tclearInterval( docLoaded )\n\t\t\tinitialise()\n\t\t}\n\t}, 100 )\n}\n\nexport { searchPopup }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Index file for all js modules.\n *\n * This file is used to import all Toecaps JS modules and set the theme functionality up. It also\n * provides an entry point for Webpack bundling.\n *\n * @link https://metabox.io/modernizing-javascript-code-in-wordpress/\n */\n\nimport { parallax } from './js/parallax'\nimport { accordian } from './js/accordian'\nimport { menuFullscreen } from './js/menu-fullscreen'\nimport { searchPopup } from './js/search-popup'\nimport { psuedoButtons } from './js/psuedo-button'\nimport { dropdownControl } from './js/dropdown'\nimport { menuMore } from './js/menu-more'\n\nparallax()\naccordian.initialise()\nmenuFullscreen()\nsearchPopup()\npsuedoButtons()\ndropdownControl.initialise()\nmenuMore()\n"],"names":["accordianButtons","document","querySelectorAll","accordian","bindEvents","forEach","element","addEventListener","toggleAria","this","setAttribute","getAttribute","nextElementSibling","click","initialise","docLoaded","setInterval","readyState","clearInterval","dropdowns","dropdownParents","dropdown","push","parentElement","menuContainers","Set","mouseDown","dropdownControl","initDropdowns","pageClickHandler","registerHover","menu","menuClickHandler","isInLeftHalf","dims","getBoundingClientRect","viewportWidth","window","innerWidth","left","scrollIntoView","menuStyles","bodyStyles","body","viewportHeight","innerHeight","bottom","scrollDistance","scrollBy","style","height","documentElement","scrollHeight","event","isAMenu","contains","target","activeDropdowns","querySelector","closest","close","hoverHandler","button","getElementsByClassName","type","open","classList","hoverTarget","mouseOverElem","setTimeout","removeEventListener","focusHandler","relatedTarget","deregisterHover","add","remove","activeButton","activeTopLevelDropdowns","topLevelDropdown","activeDropdown","inactiveAncestorDropdowns","allBranchDropowns","unshift","pop","branchDropdown","inactiveButton","lastElementChild","activeBranch","length","i","menuFullscreen","checkbox","viewportSizeCheck","viewportResizeSettle","parseInt","width","checked","clearTimeout","getScrollbarWidth","widthWithScrollBar","widthWithoutScrollBar","getElementById","display","psuedoScrollBar","createElement","position","right","top","background","zIndex","appendChild","overflow","scrollbarWidth","paddingRight","disableScroll","menuMore","navSelector","moreTemplate","inNavbarClass","inMoreClass","initialised","navParents","navBars","nav","updateClasses","elem","replace","updateAll","navParent","more","moreContents","update","navParentWidth","widthIncPadding","clientWidth","styles","getComputedStyle","getPropertyValue","getInnerWidth","navWidth","offsetWidth","flexGap","navLastItem","previousElementSibling","prepend","children","firstChild","firstElementChild","firstChildWidth","newNavWidth","insertBefore","childElementCount","visibility","resizeTimout","onresize","moreClone","content","cloneNode","autoMore","key","preventDefault","gsap","registerPlugin","ScrollTrigger","parallax","parallaxInner","parallaxTrigger","clientHeight","to","y","z","ease","scrollTrigger","trigger","scrub","start","end","psuedoButtons","searchPopup","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}